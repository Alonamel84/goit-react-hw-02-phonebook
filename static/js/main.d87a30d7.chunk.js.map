{"version":3,"sources":["components/data/data.module.css","components/ContactItem/ContactItem.module.css","components/FilterName/FilterName.module.css","components/ContactsList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/FilterName/FilterName.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","number","name","handleChange","e","setState","target","value","onFormSubmit","preventDefault","props","contact","some","item","toLowerCase","alert","onSubmit","this","className","s","form","label","pattern","title","required","type","placeholder","onChange","addButton","Component","ContactItem","onDelete","id","contactItem","delButton","onClick","FilterName","ContactList","children","contactList","App","contacts","filter","handleSubmit","data","shortid","require","generate","prevState","filterName","currentTarget","includes","filterContacts","container","map","propTypes","PropTypes","array","func","string","isRequired","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,sB,mBCA9DD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,YAAc,mC,mBCA3ED,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,YAAc,mC,uCCAhCD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,0BAA0B,UAAY,iC,sKCG5FC,E,4MACFC,MAAQ,CACJC,OAAQ,GACRC,KAAM,I,EAETC,aAAe,SAAAC,GAChB,EAAKC,SAAL,eAAiBD,EAAEE,OAAOJ,KAAOE,EAAEE,OAAOC,S,EAE1CC,aAAe,SAAAJ,GAGX,GAFAA,EAAEK,iBACF,EAAKJ,SAAS,CAACH,KAAK,GAAID,OAAO,KAC3B,EAAKS,MAAMC,QAAQC,MAAK,SAAAC,GAAI,OAAIA,EAAKX,KAAKY,gBAAkB,EAAKd,MAAME,KAAKY,iBAC5E,OAAOC,MAAM,GAAD,OAAI,EAAKf,MAAME,KAAf,4BAChB,EAAKQ,MAAMM,SAAS,EAAKhB,Q,4CAG7B,WACK,MAAyBiB,KAAKjB,MAAtBE,EAAR,EAAQA,KAAMD,EAAd,EAAcA,OACf,OACA,mCACC,uBAAMiB,UAAYC,IAAEC,KAAMJ,SAAWC,KAAKT,aAA1C,UACL,wBAAOU,UAAYC,IAAEE,MAArB,iBAEQ,uBACEnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,KAAK,OACLC,YAAY,aACZnB,MAAOL,EACPyB,SAAUV,KAAKd,kBAGnB,wBAAOe,UAAYC,IAAEE,MAArB,mBAEE,uBACEI,KAAK,MACPvB,KAAK,SACLwB,YAAY,qBACVJ,QAAQ,2GAERC,MAAM,kiBAENC,UAAQ,EACRjB,MAAON,EACP0B,SAAUV,KAAKd,kBAIT,wBAAQe,UAAYC,IAAES,UAAWH,KAAK,SAAtC,kC,GAlDMI,aAqEX9B,I,iBC9DA+B,EAVK,SAAC,GAAoC,IAAlC5B,EAAiC,EAAjCA,KAAOD,EAA0B,EAA1BA,OAAQ8B,EAAkB,EAAlBA,SAASC,EAAS,EAATA,GAE3C,OACI,mCACI,qBAAId,UAAWC,IAAEc,YAAaD,GAAKA,EAAnC,UAAwC9B,EAAxC,IAA+CD,EAC/C,wBAAQiB,UAAYC,IAAEe,UAAWT,KAAK,SAASU,QAAS,WAAQJ,EAASC,IAAzE,0B,yBCYGI,EAjBI,SAAC,GAAyB,IAAvB7B,EAAsB,EAAtBA,MAAOoB,EAAe,EAAfA,SACzB,OACI,mCACI,wBAAOT,UAAYC,IAAEE,MAArB,kCAEI,uBAAOnB,KAAK,SAChBuB,KAAK,OACLC,YAAY,aACZnB,MAAOA,EACNoB,SAAUA,U,iBCHRU,EANK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAEI,oBAAIpB,UAAYC,IAAEoB,YAAlB,SAAiCD,K,iBCInCE,E,4MACJxC,MAAQ,CACNyC,SAAU,GACVC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,IAAMC,EAAUC,EAAQ,IAClBnC,EAAO,aAAKqB,GAAIa,EAAQE,YAAeH,GAC7C,EAAKvC,UAAS,SAAA2C,GACZ,MAAO,CAAEP,SAAS,GAAD,mBAAMO,EAAUP,UAAhB,CAA0B9B,S,EAI/CsC,WAAa,SAAA7C,GACXA,EAAEK,iBACF,EAAKJ,SAAS,CAAEqC,OAAQtC,EAAE8C,cAAc3C,S,EAE1CmC,OAAS,WACP,OAAO,EAAK1C,MAAMyC,SAASC,QAAO,SAAA/B,GAAO,OACvCA,EAAQT,KAAKY,cAAcqC,SAAS,EAAKnD,MAAM0C,OAAO5B,mB,EAG1DiB,SAAW,SAAAC,GACT,EAAK3B,UAAS,SAAA2C,GAAS,MAAK,CAC1BP,SAAUO,EAAUP,SAASC,QAAO,SAAA7B,GAAI,OAAIA,EAAKmB,KAAOA,U,4CAI5D,WAAU,IAAD,OACDoB,EAAiBnC,KAAKyB,SAC5B,OACE,sBAAKxB,UAAWC,IAAEkC,UAAlB,UACE,oBAAInC,UAAWC,IAAEI,MAAjB,uBACA,cAAC,EAAD,CAAaP,SAAUC,KAAK0B,aAAchC,QAASM,KAAKjB,MAAMyC,WAC9D,oBAAIvB,UAAWC,IAAEI,MAAjB,sBACA,cAAC,EAAD,CAAYhB,MAAOU,KAAKjB,MAAM0C,OAAQf,SAAUV,KAAKgC,aACrD,cAAC,EAAD,UACGG,EAAeE,KAAI,SAAAzC,GAAI,OACtB,cAAC,EAAD,CAEEX,KAAMW,EAAKX,KACXD,OAAQY,EAAKZ,OACb8B,SAAU,EAAKA,SACfC,GAAInB,EAAKmB,IAJJnB,EAAKmB,gB,GAxCNH,aAqDlB9B,EAAYwD,UAAY,CACtB5C,QAAS6C,IAAUC,MACnBzC,SAAUwC,IAAUE,MAEtBtB,EAAWmB,UAAY,CACrBhD,MAAOiD,IAAUG,OACjBhC,SAAU6B,IAAUE,MAEtB5B,EAAYyB,UAAY,CACtBrD,KAAMsD,IAAUG,OAAOC,WACvB3D,OAAQuD,IAAUG,OAAOC,WACzB7B,SAAUyB,IAAUE,KACpB1B,GAAIwB,IAAUG,QAGDnB,QCvEfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d87a30d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"data_container__3EnsO\",\"title\":\"data_title__Pjkoj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delButton\":\"ContactItem_delButton__44YPe\",\"contactItem\":\"ContactItem_contactItem__1zhTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterName_label__y3Mxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__MN-wC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1LxzH\",\"form\":\"ContactForm_form__263JF\",\"addButton\":\"ContactForm_addButton__3psjH\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ContactForm/ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        number: '',\r\n        name: ''\r\n    };\r\n     handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    onFormSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({name:'', number:''})\r\n        if (this.props.contact.some(item => item.name.toLowerCase() === this.state.name.toLowerCase()))\r\n            return alert(`${this.state.name} is already in contacts`);\r\n        this.props.onSubmit(this.state)\r\n    };\r\n   \r\n    render() {   \r\n         const { name, number } = this.state;\r\n        return(\r\n        <>\r\n         <form className={ s.form} onSubmit= {this.onFormSubmit}>\r\n    <label className={ s.label}>\r\n            Name\r\n            <input\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={ s.label}>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"Enter phone number\"\r\n              pattern=\"\\+?\\d{(1, 4)}?[-.\\s]?\\(?\\d{(1, 3)}?\\)?[-.\\s]?\\d\r\n            {(1, 4)}[-.\\s]?\\d{(1, 4)}[-.\\s]?\\d{(1, 9)}\"\r\n              title=\"Номер телефона должен состоять цифр и\r\n            может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n                    <button className={ s.addButton} type=\"submit\">Add contact</button>\r\n        </form>\r\n\r\n            </>\r\n        )\r\n    }\r\n};\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  pattern:PropTypes.string,\r\n    title: PropTypes.string,\r\n  type:PropTypes.string,\r\n    placeholder:PropTypes.string,\r\n  value:PropTypes.string,\r\n  onChange:PropTypes.func,\r\n\r\n};\r\n\r\nexport default ContactForm;","import s from '../ContactItem/ContactItem.module.css'\r\nconst ContactItem = ({ name,  number, onDelete,id }) => {\r\n    \r\n    return (\r\n        <>\r\n            <li className={s.contactItem} id={ id}>{name} {number}\r\n            <button className={ s.delButton} type='button' onClick={() => { onDelete(id) }}>Delete</button>\r\n           </li>\r\n            </>\r\n    )\r\n}\r\nexport default ContactItem;","import s from '../FilterName/FilterName.module.css'\r\nconst FilterName = ({ value, onChange }) => {\r\n    return(\r\n        <>\r\n            <label className={ s.label}>\r\n          Find contacts by name\r\n                <input name='filter'\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            value={value}\r\n             onChange={onChange}\r\n                    \r\n          />\r\n    </label >\r\n         \r\n   </>\r\n    )\r\n};\r\nexport default FilterName;","import s from '../ContactsList/ContactList.module.css'\r\nconst ContactList = ({ children }) => {\r\n    return (\r\n       \r\n        <ul className={ s.contactList}>{ children}</ul>\r\n    )\r\n }\r\nexport default ContactList;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from './components/ContactForm';\nimport ContactItem from './components/ContactItem';\nimport './App.css';\nimport FilterName from './components/FilterName';\nimport ContactList from './components/ContactsList/ContactsList';\nimport s from './components/data/data.module.css';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleSubmit = data => {\n    const shortid = require('shortid');\n    const contact = { id: shortid.generate(), ...data };\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  filterName = e => {\n    e.preventDefault();\n    this.setState({ filter: e.currentTarget.value });\n  };\n  filter = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  };\n  onDelete = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  render() {\n    const filterContacts = this.filter();\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.handleSubmit} contact={this.state.contacts}></ContactForm>\n        <h2 className={s.title}>Contacts</h2>\n        <FilterName value={this.state.filter} onChange={this.filterName}></FilterName>\n        <ContactList>\n          {filterContacts.map(item => (\n            <ContactItem\n              key={item.id}\n              name={item.name}\n              number={item.number}\n              onDelete={this.onDelete}\n              id={item.id}\n            ></ContactItem>\n          ))}\n        </ContactList>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  contact: PropTypes.array,\n  onSubmit: PropTypes.func,\n};\nFilterName.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  id: PropTypes.string,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}